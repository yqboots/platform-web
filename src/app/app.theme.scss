// -----------------------------------------------------------------------------------------------------
// @ Custom color maps for YQBoots
// -----------------------------------------------------------------------------------------------------
$yq-white: (
  500: white,
  contrast: (
    500: $dark-primary-text
  )
);

$yq-black: (
  500: black,
  contrast: (
    500: $light-primary-text,
  )
);

$yq-navy: (
  50: #ECECEE,
  100: #C5C6CB,
  200: #9EA1A9,
  300: #7D818C,
  400: #5C616F,
  500: #3C4252,
  600: #353A48,
  700: #2D323E,
  800: #262933,
  900: #1E2129,
  A100: #C5C6CB,
  A200: #9EA1A9,
  A400: #5C616F,
  A700: #2D323E,
  contrast: (
    50: $dark-primary-text,
    100: $dark-primary-text,
    200: $dark-primary-text,
    300: $light-primary-text,
    400: $light-primary-text,
    500: $light-primary-text,
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: $light-primary-text,
    A100: $dark-primary-text,
    A200: $light-primary-text,
    A400: $light-primary-text,
    A700: $light-primary-text,
  )
);

// Generate YQBoots color classes for custom palettes
$custom_palettes: (
  yq-white: $yq-white,
  yq-black: $yq-black,
  yq-navy: $yq-navy
);

@include yq-color-classes($custom_palettes);

// -----------------------------------------------------------------------------------------------------
// @ Typography
// -----------------------------------------------------------------------------------------------------

// Angular Material typography
$typography: mat-typography-config(
  $font-family: 'Muli, Helvetica Neue, Arial, sans-serif',
  $title: mat-typography-level(20px, 32px, 600),
  $body-2: mat-typography-level(14px, 24px, 600),
  $button: mat-typography-level(14px, 14px, 600),
  $input: mat-typography-level(16px, 1.125, 400) // line-height must be unitless !!!
);

// Setup the typography
@include angular-material-typography($typography);

// -----------------------------------------------------------------------------------------------------
// @ Component theming
// -----------------------------------------------------------------------------------------------------

// Import app and page component themes here to enable theming for them
@import "src/app/layout/components/chat-panel/chat-panel.theme";
@import "src/app/layout/components/toolbar/toolbar.theme";

@import "projects/extensions/src/lib/academy/academy.theme";
@import "projects/extensions/src/lib//calendar/calendar.theme";
@import "projects/extensions/src/lib//chat/chat.theme";
@import "projects/extensions/src/lib//contacts/contacts.theme";
@import "projects/extensions/src/lib//project/project.theme";
@import "projects/extensions/src/lib//e-commerce/orders/orders.theme";
@import "projects/extensions/src/lib//e-commerce/products/products.theme";
@import "projects/extensions/src/lib//file-manager/file-manager.theme";
@import "projects/extensions/src/lib//mail/mail.theme";
@import "projects/extensions/src/lib//scrumboard/scrumboard.theme";
@import "projects/extensions/src/lib//todo/todo.theme";

// Define a mixin for easier access
@mixin components-theme($theme) {
  // Layout components
  @include chat-panel-theme($theme);
  @include toolbar-theme($theme);

  // Apps
  @include academy-theme($theme);
  @include calendar-theme($theme);
  @include chat-theme($theme);
  @include contacts-theme($theme);
  @include dashboards-project-theme($theme);
  @include e-commerce-orders-theme($theme);
  @include e-commerce-products-theme($theme);
  @include file-manager-theme($theme);
  @include mail-theme($theme);
  @include scrumboard-theme($theme);
  @include todo-theme($theme);
}

// -----------------------------------------------------------------------------------------------------
// @ Define the default theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$default-primary-palette: mat-palette($yq-navy);
$default-accent-palette: mat-palette($mat-light-blue, 600, 400, 700);
$default-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$theme: mat-light-theme($default-primary-palette, $default-accent-palette, $default-warn-palette);

// Add ".theme-default" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-default {

  // Create an Angular Material theme from the $theme map
  @include angular-material-theme($theme);

  // Apply the theme to the YQBoots Core
  @include yq-core-theme($theme);

  // Apply the theme to the user components
  @include components-theme($theme);

  // Generate YQBoots color classes for primary, accent and warn colors
  $palettes: (
    primary: $default-primary-palette,
    accent: $default-accent-palette,
    warn: $default-warn-palette
  );

  @include yq-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a yellow light theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$yellow-light-theme-primary-palette: mat-palette($yq-navy, 600, 400, 700);
$yellow-light-theme-accent-palette: mat-palette($mat-yellow, 600, 400, 700);
$yellow-light-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$yellow-light-theme: mat-light-theme($yellow-light-theme-primary-palette, $yellow-light-theme-accent-palette, $yellow-light-theme-warn-palette);

// Add ".theme-yellow-light" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-yellow-light {

  // Generate the Angular Material theme
  @include angular-material-theme($yellow-light-theme);

  // Apply the theme to the YQBoots Core
  @include yq-core-theme($yellow-light-theme);

  // Apply the theme to the user components
  @include components-theme($yellow-light-theme);

  // Generate YQBoots color classes for primary, accent and warn colors
  $palettes: (
    primary: $yellow-light-theme-primary-palette,
    accent: $yellow-light-theme-accent-palette,
    warn: $yellow-light-theme-warn-palette
  );

  @include yq-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a blue-gray dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$blue-gray-dark-theme-primary-palette: mat-palette($mat-blue);
$blue-gray-dark-theme-accent-palette: mat-palette($mat-blue-gray);
$blue-gray-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$blue-gray-dark-theme: mat-dark-theme($blue-gray-dark-theme-primary-palette, $blue-gray-dark-theme-accent-palette, $blue-gray-dark-theme-warn-palette);

// Add ".theme-blue-gray-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-blue-gray-dark {

  // Generate the Angular Material theme
  @include angular-material-theme($blue-gray-dark-theme);

  // Apply the theme to the YQBoots Core
  @include yq-core-theme($blue-gray-dark-theme);

  // Apply the theme to the user components
  @include components-theme($blue-gray-dark-theme);

  // Generate YQBoots color classes for primary, accent and warn colors
  $palettes: (
    primary: $blue-gray-dark-theme-primary-palette,
    accent: $blue-gray-dark-theme-accent-palette,
    warn: $blue-gray-dark-theme-warn-palette
  );

  @include yq-color-classes($palettes);
}

// -----------------------------------------------------------------------------------------------------
// @ Define a pink dark theme
// -----------------------------------------------------------------------------------------------------

// Define the primary, accent and warn palettes
$pink-dark-theme-primary-palette: mat-palette($mat-pink);
$pink-dark-theme-accent-palette: mat-palette($mat-pink);
$pink-dark-theme-warn-palette: mat-palette($mat-red);

// Create the Material theme object
$pink-dark-theme: mat-dark-theme($pink-dark-theme-primary-palette, $pink-dark-theme-accent-palette, $pink-dark-theme-warn-palette);

// Add ".theme-pink-dark" class to the body to activate this theme.
// Class name must start with "theme-" !!!
body.theme-pink-dark {

  // Generate the Angular Material theme
  @include angular-material-theme($pink-dark-theme);

  // Apply the theme to the YQBoots Core
  @include yq-core-theme($pink-dark-theme);

  // Apply the theme to the user components
  @include components-theme($pink-dark-theme);

  // Generate YQBoots color classes for primary, accent and warn colors
  $palettes: (
    primary: $pink-dark-theme-primary-palette,
    accent: $pink-dark-theme-accent-palette,
    warn: $pink-dark-theme-warn-palette
  );

  @include yq-color-classes($palettes);
}
